-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.companies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text,
  legal_name text,
  type text CHECK (type = ANY (ARRAY['expediteur'::text, 'transporteur'::text])),
  vat_number text,
  billing_email text,
  billing_address jsonb,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text])),
  created_by uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone,
  rcs character varying,
  rejection_reason text,
  CONSTRAINT companies_pkey PRIMARY KEY (id),
  CONSTRAINT companies_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.company_invitations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  email text NOT NULL,
  role text NOT NULL CHECK (role = ANY (ARRAY['owner'::text, 'admin'::text, 'member'::text])),
  token text NOT NULL DEFAULT (gen_random_uuid())::text UNIQUE,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'accepted'::text, 'revoked'::text, 'expired'::text])),
  expires_at timestamp with time zone DEFAULT (now() + '7 days'::interval),
  invited_by uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT company_invitations_pkey PRIMARY KEY (id),
  CONSTRAINT company_invitations_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT company_invitations_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES auth.users(id)
);
CREATE TABLE public.company_members (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  company_id uuid NOT NULL,
  user_id uuid NOT NULL,
  role text NOT NULL CHECK (role = ANY (ARRAY['owner'::text, 'admin'::text, 'member'::text])),
  invited_by uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT company_members_pkey PRIMARY KEY (id),
  CONSTRAINT company_members_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT company_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT company_members_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES auth.users(id),
  CONSTRAINT fk_company_members_user_id FOREIGN KEY (user_id) REFERENCES auth.users(id)
);
CREATE TABLE public.mandats (
  id integer NOT NULL DEFAULT nextval('mandats_id_seq'::regclass),
  payload jsonb NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  uid uuid NOT NULL,
  company_id uuid,
  created_by uuid,
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'approved'::text, 'rejected'::text])),
  rejection_reason text,
  moderated_by uuid,
  moderated_at timestamp with time zone,
  transporteur_company_id uuid,
  transporteur_company_user uuid,
  transporteur_status text CHECK (transporteur_status = ANY (ARRAY['accepted'::text, 'picked_up'::text, 'delivered'::text, 'delivery_problem'::text])),
  mandat_uuid uuid NOT NULL DEFAULT gen_random_uuid(),
  nom text,
  description text,
  images ARRAY,
  depart_adresse text,
  depart_lat numeric,
  depart_lng numeric,
  depart_contact text,
  arrivee_adresse text,
  arrivee_lat numeric,
  arrivee_lng numeric,
  arrivee_contact text,
  depart_horaires_ouverture text,
  arrivee_horaires_ouverture text,
  enlevement_souhaite_debut_at timestamp with time zone,
  enlevement_souhaite_fin_at timestamp with time zone,
  enlevement_confirme_debut_at timestamp with time zone,
  enlevement_confirme_fin_at timestamp with time zone,
  enlevement_max_at timestamp with time zone,
  enlevement_effectif_at timestamp with time zone,
  livraison_prevue_debut_at timestamp with time zone,
  livraison_prevue_fin_at timestamp with time zone,
  livraison_effective_at timestamp with time zone,
  type_marchandise USER-DEFINED,
  poids_total_kg numeric,
  volume_total_m3 numeric,
  nombre_colis integer,
  type_vehicule USER-DEFINED,
  type_acces USER-DEFINED,
  acces_autre text,
  moyen_chargement USER-DEFINED,
  sensi_temperature boolean,
  temperature_min_c numeric,
  temperature_max_c numeric,
  matiere_dangereuse boolean,
  adr_classe integer,
  adr_uno text,
  distance_km numeric,
  duree_estimee_min numeric,
  surface_m2 numeric,
  tarif_km_base_chf numeric,
  maj_carburant_pct numeric,
  maj_embouteillage_pct numeric,
  autre_supp jsonb,
  surcharge_grue_pct numeric,
  surcharge_grue_chf numeric,
  tva_rate_pct numeric,
  prix_base_ht numeric,
  prix_estime_ht numeric,
  prix_estime_ttc numeric,
  monnaie USER-DEFINED,
  facture_id uuid,
  statut_facturation USER-DEFINED,
  notes_calcul_json jsonb,
  accepte_at timestamp with time zone,
  preuve_livraison text,
  documents ARRAY,
  commentaire_transporteur text,
  commentaire_expediteur text,
  annule_par USER-DEFINED,
  raison_annulation text,
  date_creation timestamp with time zone DEFAULT now(),
  cree_par uuid,
  CONSTRAINT mandats_pkey PRIMARY KEY (id),
  CONSTRAINT fk_mandat_user FOREIGN KEY (uid) REFERENCES auth.users(id),
  CONSTRAINT mandats_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT mandats_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT mandats_moderated_by_fkey FOREIGN KEY (moderated_by) REFERENCES auth.users(id),
  CONSTRAINT mandats_transporteur_company_id_fkey FOREIGN KEY (transporteur_company_id) REFERENCES public.companies(id),
  CONSTRAINT mandats_transporteur_company_user_fkey FOREIGN KEY (transporteur_company_user) REFERENCES auth.users(id)
);
CREATE TABLE public.pricing_sets (
  id bigint NOT NULL DEFAULT nextval('pricing_sets_id_seq'::regclass),
  name text NOT NULL,
  variables jsonb NOT NULL DEFAULT jsonb_build_object(),
  supplements jsonb NOT NULL DEFAULT '[]'::jsonb,
  is_active boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  created_by uuid,
  activated_at timestamp with time zone,
  deactivated_at timestamp with time zone,
  CONSTRAINT pricing_sets_pkey PRIMARY KEY (id),
  CONSTRAINT pricing_sets_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.users (
  id integer NOT NULL DEFAULT nextval('users_id_seq'::regclass),
  uid uuid UNIQUE,
  first_name text NOT NULL,
  last_name text NOT NULL,
  role text NOT NULL CHECK (role = ANY (ARRAY['expediteur'::text, 'transporteur'::text])),
  email text NOT NULL UNIQUE,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  ADMIN boolean NOT NULL DEFAULT false,
  company_id uuid,
  company_members uuid,
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_uid_fkey FOREIGN KEY (uid) REFERENCES auth.users(id),
  CONSTRAINT users_company_id_fkey FOREIGN KEY (company_id) REFERENCES public.companies(id),
  CONSTRAINT users_company_members_fkey FOREIGN KEY (company_members) REFERENCES public.company_members(id)
);